<?php


/* 1. Проверить есть ли куки с именем avtorization
2. Если она есть мы ее переводим в массив
3. Обращаемся к БД и ищем запись с этим ID
4. Мы проверяем хеш код пороля
5. Если совподает то аутентификация прошла успешно и пользователь находится в системе
    5.1 создаем массив, который будет хранить в себе ИД пользователя и его имя
6. Если не совподает то удаляем куки
    6.1 создаем переменную со значением false
*/


function myfunctAuth(){  // сами создаем функцию для аунтетификации
global $BD;   // Открываем доступ к это переменной БД, внутри тела функции при помощи ГЛОБАЛ

    if(isset($_COOKIE["auth"])){           // проверяем наличие куки с инменем ["authorization"] если есть....
    $dataCookie = json_decode($_COOKIE["auth"], true); // дикадируем в массив при помощи json_decode- ( ..., аргумент "true"- переводит в массив/ иначе в объект)
    $data = $BD->prepare("SELECT `login`, `id`, `password` FROM `users` WHERE(`id` = :id) LIMIT 1"); // подготовка СКУЛ-ЗАПРОС
    $data->execute(["id" => $dataCookie["id"]]); // СОЗДАЕМ МАССИВ, И ОТПРАВЛЯЕМ НА ВЫПОЛНЕНИЕ 
    $result = $data->fetch(PDO::FETCH_ASSOC); // ПОЛУЧАЕМ РЕЗУЛЬТАТ ИЗ БД
        if($result !== false){ // Если данные в БД нашлись
            if($result["password"] === $dataCookie["password"]){ // Сравниваем ХЕШ-ПАРОЛЬ который находиться в КУКИ и БД
            $resultArray = [ // Создаем массив для вывода
                "id" => $result["id"],
                "login" => $result["login"]
                ];
            return $resultArray;
            }
        }
    setcookie("auth", "", date("U")-3600); // Устанавливаем куки с отрицательным временем жизни (УДАЛЯЕМ)
    }
return false;
}




?>